// Code generated by protoc-gen-go.
// source: system.proto
// DO NOT EDIT!

/*
Package dg_model is a generated protocol buffer package.

It is generated from these files:
	system.proto

It has these top-level messages:
	PingRequest
	PingResponse
	SystemStatusRequest
	SystemStatusResponse
	InstanceConfigureRequest
	GetInstancesRequest
	InstanceConfigureResponse
	InstanceConfig
	RecImageVConfig
	RecImageFConfig
	RecVideoVConfig
	RecVideoFConfig
	RankVConfig
	RankFConfig
	EngineStatus
*/
package dg_model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dg_model1 "."
import dg_model2 "."

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InstanceType int32

const (
	InstanceType_CFG_TYPE_VEHICLE_IMAGE  InstanceType = 0
	InstanceType_CFG_TYPE_VEHICLE_VIDEO  InstanceType = 1
	InstanceType_CFG_TYPE_VEHICLE_RANKER InstanceType = 2
	InstanceType_CFG_TYPE_FACE_IMAGE     InstanceType = 3
	InstanceType_CFG_TYPE_FACE_VIDEO     InstanceType = 4
	InstanceType_CFG_TYPE_FACE_RANKER    InstanceType = 5
)

var InstanceType_name = map[int32]string{
	0: "CFG_TYPE_VEHICLE_IMAGE",
	1: "CFG_TYPE_VEHICLE_VIDEO",
	2: "CFG_TYPE_VEHICLE_RANKER",
	3: "CFG_TYPE_FACE_IMAGE",
	4: "CFG_TYPE_FACE_VIDEO",
	5: "CFG_TYPE_FACE_RANKER",
}
var InstanceType_value = map[string]int32{
	"CFG_TYPE_VEHICLE_IMAGE":  0,
	"CFG_TYPE_VEHICLE_VIDEO":  1,
	"CFG_TYPE_VEHICLE_RANKER": 2,
	"CFG_TYPE_FACE_IMAGE":     3,
	"CFG_TYPE_FACE_VIDEO":     4,
	"CFG_TYPE_FACE_RANKER":    5,
}

func (x InstanceType) String() string {
	return proto.EnumName(InstanceType_name, int32(x))
}
func (InstanceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PingResponse struct {
	Message string `protobuf:"bytes,1,opt,name=Message,json=message" json:"Message,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SystemStatusRequest struct {
}

func (m *SystemStatusRequest) Reset()                    { *m = SystemStatusRequest{} }
func (m *SystemStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*SystemStatusRequest) ProtoMessage()               {}
func (*SystemStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type SystemStatusResponse struct {
	ModelVer    string `protobuf:"bytes,1,opt,name=ModelVer,json=modelVer" json:"ModelVer,omitempty"`
	EngineVer   string `protobuf:"bytes,2,opt,name=EngineVer,json=engineVer" json:"EngineVer,omitempty"`
	ServiceVer  string `protobuf:"bytes,3,opt,name=ServiceVer,json=serviceVer" json:"ServiceVer,omitempty"`
	CpuUsage    string `protobuf:"bytes,4,opt,name=CpuUsage,json=cpuUsage" json:"CpuUsage,omitempty"`
	AvailMem    string `protobuf:"bytes,5,opt,name=AvailMem,json=availMem" json:"AvailMem,omitempty"`
	TotalMem    string `protobuf:"bytes,6,opt,name=TotalMem,json=totalMem" json:"TotalMem,omitempty"`
	AvailDisk   string `protobuf:"bytes,7,opt,name=AvailDisk,json=availDisk" json:"AvailDisk,omitempty"`
	TotalDisk   string `protobuf:"bytes,8,opt,name=TotalDisk,json=totalDisk" json:"TotalDisk,omitempty"`
	NetIOSend   string `protobuf:"bytes,9,opt,name=NetIOSend,json=netIOSend" json:"NetIOSend,omitempty"`
	NetIORecv   string `protobuf:"bytes,10,opt,name=NetIORecv,json=netIORecv" json:"NetIORecv,omitempty"`
	GpuUsage    string `protobuf:"bytes,11,opt,name=GpuUsage,json=gpuUsage" json:"GpuUsage,omitempty"`
	GpuAvailMem string `protobuf:"bytes,12,opt,name=GpuAvailMem,json=gpuAvailMem" json:"GpuAvailMem,omitempty"`
	GpuTotalMem string `protobuf:"bytes,13,opt,name=GpuTotalMem,json=gpuTotalMem" json:"GpuTotalMem,omitempty"`
}

func (m *SystemStatusResponse) Reset()                    { *m = SystemStatusResponse{} }
func (m *SystemStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*SystemStatusResponse) ProtoMessage()               {}
func (*SystemStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type InstanceConfigureRequest struct {
	RecImageVConfig *RecImageVConfig `protobuf:"bytes,1,opt,name=RecImageVConfig,json=recImageVConfig" json:"RecImageVConfig,omitempty"`
	RecImageFConfig *RecImageFConfig `protobuf:"bytes,2,opt,name=RecImageFConfig,json=recImageFConfig" json:"RecImageFConfig,omitempty"`
	RecVideoVConfig *RecVideoVConfig `protobuf:"bytes,3,opt,name=RecVideoVConfig,json=recVideoVConfig" json:"RecVideoVConfig,omitempty"`
	RecVideoFConfig *RecVideoFConfig `protobuf:"bytes,4,opt,name=RecVideoFConfig,json=recVideoFConfig" json:"RecVideoFConfig,omitempty"`
	RankVConfig     *RankVConfig     `protobuf:"bytes,5,opt,name=RankVConfig,json=rankVConfig" json:"RankVConfig,omitempty"`
	RankFConfig     *RankFConfig     `protobuf:"bytes,6,opt,name=RankFConfig,json=rankFConfig" json:"RankFConfig,omitempty"`
}

func (m *InstanceConfigureRequest) Reset()                    { *m = InstanceConfigureRequest{} }
func (m *InstanceConfigureRequest) String() string            { return proto.CompactTextString(m) }
func (*InstanceConfigureRequest) ProtoMessage()               {}
func (*InstanceConfigureRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *InstanceConfigureRequest) GetRecImageVConfig() *RecImageVConfig {
	if m != nil {
		return m.RecImageVConfig
	}
	return nil
}

func (m *InstanceConfigureRequest) GetRecImageFConfig() *RecImageFConfig {
	if m != nil {
		return m.RecImageFConfig
	}
	return nil
}

func (m *InstanceConfigureRequest) GetRecVideoVConfig() *RecVideoVConfig {
	if m != nil {
		return m.RecVideoVConfig
	}
	return nil
}

func (m *InstanceConfigureRequest) GetRecVideoFConfig() *RecVideoFConfig {
	if m != nil {
		return m.RecVideoFConfig
	}
	return nil
}

func (m *InstanceConfigureRequest) GetRankVConfig() *RankVConfig {
	if m != nil {
		return m.RankVConfig
	}
	return nil
}

func (m *InstanceConfigureRequest) GetRankFConfig() *RankFConfig {
	if m != nil {
		return m.RankFConfig
	}
	return nil
}

type GetInstancesRequest struct {
}

func (m *GetInstancesRequest) Reset()                    { *m = GetInstancesRequest{} }
func (m *GetInstancesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetInstancesRequest) ProtoMessage()               {}
func (*GetInstancesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type InstanceConfigureResponse struct {
	Status  string          `protobuf:"bytes,1,opt,name=Status,json=status" json:"Status,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=Message,json=message" json:"Message,omitempty"`
	Results []*EngineStatus `protobuf:"bytes,3,rep,name=Results,json=results" json:"Results,omitempty"`
}

func (m *InstanceConfigureResponse) Reset()                    { *m = InstanceConfigureResponse{} }
func (m *InstanceConfigureResponse) String() string            { return proto.CompactTextString(m) }
func (*InstanceConfigureResponse) ProtoMessage()               {}
func (*InstanceConfigureResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *InstanceConfigureResponse) GetResults() []*EngineStatus {
	if m != nil {
		return m.Results
	}
	return nil
}

type InstanceConfig struct {
	Type          InstanceType                   `protobuf:"varint,1,opt,name=Type,json=type,enum=dg.model.InstanceType" json:"Type,omitempty"`
	Count         int32                          `protobuf:"varint,2,opt,name=Count,json=count" json:"Count,omitempty"`
	Functions     []dg_model1.RecognizeFunctions `protobuf:"varint,3,rep,packed,name=Functions,json=functions,enum=dg.model.RecognizeFunctions" json:"Functions,omitempty"`
	StorageConfig *dg_model2.StorageConfig       `protobuf:"bytes,4,opt,name=StorageConfig,json=storageConfig" json:"StorageConfig,omitempty"`
}

func (m *InstanceConfig) Reset()                    { *m = InstanceConfig{} }
func (m *InstanceConfig) String() string            { return proto.CompactTextString(m) }
func (*InstanceConfig) ProtoMessage()               {}
func (*InstanceConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *InstanceConfig) GetStorageConfig() *dg_model2.StorageConfig {
	if m != nil {
		return m.StorageConfig
	}
	return nil
}

type RecImageVConfig struct {
	Instances *InstanceConfig `protobuf:"bytes,1,opt,name=Instances,json=instances" json:"Instances,omitempty"`
}

func (m *RecImageVConfig) Reset()                    { *m = RecImageVConfig{} }
func (m *RecImageVConfig) String() string            { return proto.CompactTextString(m) }
func (*RecImageVConfig) ProtoMessage()               {}
func (*RecImageVConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RecImageVConfig) GetInstances() *InstanceConfig {
	if m != nil {
		return m.Instances
	}
	return nil
}

type RecImageFConfig struct {
	Instances *InstanceConfig `protobuf:"bytes,1,opt,name=Instances,json=instances" json:"Instances,omitempty"`
}

func (m *RecImageFConfig) Reset()                    { *m = RecImageFConfig{} }
func (m *RecImageFConfig) String() string            { return proto.CompactTextString(m) }
func (*RecImageFConfig) ProtoMessage()               {}
func (*RecImageFConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RecImageFConfig) GetInstances() *InstanceConfig {
	if m != nil {
		return m.Instances
	}
	return nil
}

type RecVideoVConfig struct {
	Instances          *InstanceConfig `protobuf:"bytes,1,opt,name=Instances,json=instances" json:"Instances,omitempty"`
	BufferSize         int32           `protobuf:"varint,2,opt,name=BufferSize,json=bufferSize" json:"BufferSize,omitempty"`
	DetectInterval     int32           `protobuf:"varint,3,opt,name=DetectInterval,json=detectInterval" json:"DetectInterval,omitempty"`
	ClassifyInterval   int32           `protobuf:"varint,4,opt,name=ClassifyInterval,json=classifyInterval" json:"ClassifyInterval,omitempty"`
	ClassifyBufferSize int32           `protobuf:"varint,5,opt,name=ClassifyBufferSize,json=classifyBufferSize" json:"ClassifyBufferSize,omitempty"`
}

func (m *RecVideoVConfig) Reset()                    { *m = RecVideoVConfig{} }
func (m *RecVideoVConfig) String() string            { return proto.CompactTextString(m) }
func (*RecVideoVConfig) ProtoMessage()               {}
func (*RecVideoVConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RecVideoVConfig) GetInstances() *InstanceConfig {
	if m != nil {
		return m.Instances
	}
	return nil
}

type RecVideoFConfig struct {
	Instances       *InstanceConfig `protobuf:"bytes,1,opt,name=Instances,json=instances" json:"Instances,omitempty"`
	BufferSize      int32           `protobuf:"varint,2,opt,name=BufferSize,json=bufferSize" json:"BufferSize,omitempty"`
	DetectThreshold float32         `protobuf:"fixed32,3,opt,name=DetectThreshold,json=detectThreshold" json:"DetectThreshold,omitempty"`
	DetectWidth     int32           `protobuf:"varint,4,opt,name=DetectWidth,json=detectWidth" json:"DetectWidth,omitempty"`
	DetectHeight    int32           `protobuf:"varint,5,opt,name=DetectHeight,json=detectHeight" json:"DetectHeight,omitempty"`
}

func (m *RecVideoFConfig) Reset()                    { *m = RecVideoFConfig{} }
func (m *RecVideoFConfig) String() string            { return proto.CompactTextString(m) }
func (*RecVideoFConfig) ProtoMessage()               {}
func (*RecVideoFConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RecVideoFConfig) GetInstances() *InstanceConfig {
	if m != nil {
		return m.Instances
	}
	return nil
}

type RankVConfig struct {
	Instances *InstanceConfig `protobuf:"bytes,1,opt,name=Instances,json=instances" json:"Instances,omitempty"`
}

func (m *RankVConfig) Reset()                    { *m = RankVConfig{} }
func (m *RankVConfig) String() string            { return proto.CompactTextString(m) }
func (*RankVConfig) ProtoMessage()               {}
func (*RankVConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *RankVConfig) GetInstances() *InstanceConfig {
	if m != nil {
		return m.Instances
	}
	return nil
}

type RankFConfig struct {
	Instances *InstanceConfig `protobuf:"bytes,1,opt,name=Instances,json=instances" json:"Instances,omitempty"`
}

func (m *RankFConfig) Reset()                    { *m = RankFConfig{} }
func (m *RankFConfig) String() string            { return proto.CompactTextString(m) }
func (*RankFConfig) ProtoMessage()               {}
func (*RankFConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RankFConfig) GetInstances() *InstanceConfig {
	if m != nil {
		return m.Instances
	}
	return nil
}

type EngineStatus struct {
	Instances int32   `protobuf:"varint,1,opt,name=Instances,json=instances" json:"Instances,omitempty"`
	RpcPorts  []int32 `protobuf:"varint,2,rep,packed,name=RpcPorts,json=rpcPorts" json:"RpcPorts,omitempty"`
}

func (m *EngineStatus) Reset()                    { *m = EngineStatus{} }
func (m *EngineStatus) String() string            { return proto.CompactTextString(m) }
func (*EngineStatus) ProtoMessage()               {}
func (*EngineStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func init() {
	proto.RegisterType((*PingRequest)(nil), "dg.model.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "dg.model.PingResponse")
	proto.RegisterType((*SystemStatusRequest)(nil), "dg.model.SystemStatusRequest")
	proto.RegisterType((*SystemStatusResponse)(nil), "dg.model.SystemStatusResponse")
	proto.RegisterType((*InstanceConfigureRequest)(nil), "dg.model.InstanceConfigureRequest")
	proto.RegisterType((*GetInstancesRequest)(nil), "dg.model.GetInstancesRequest")
	proto.RegisterType((*InstanceConfigureResponse)(nil), "dg.model.InstanceConfigureResponse")
	proto.RegisterType((*InstanceConfig)(nil), "dg.model.InstanceConfig")
	proto.RegisterType((*RecImageVConfig)(nil), "dg.model.RecImageVConfig")
	proto.RegisterType((*RecImageFConfig)(nil), "dg.model.RecImageFConfig")
	proto.RegisterType((*RecVideoVConfig)(nil), "dg.model.RecVideoVConfig")
	proto.RegisterType((*RecVideoFConfig)(nil), "dg.model.RecVideoFConfig")
	proto.RegisterType((*RankVConfig)(nil), "dg.model.RankVConfig")
	proto.RegisterType((*RankFConfig)(nil), "dg.model.RankFConfig")
	proto.RegisterType((*EngineStatus)(nil), "dg.model.EngineStatus")
	proto.RegisterEnum("dg.model.InstanceType", InstanceType_name, InstanceType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for SystemService service

type SystemServiceClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	SystemStatus(ctx context.Context, in *SystemStatusRequest, opts ...grpc.CallOption) (*SystemStatusResponse, error)
	GetInstances(ctx context.Context, in *GetInstancesRequest, opts ...grpc.CallOption) (*InstanceConfigureResponse, error)
	ConfigEngine(ctx context.Context, in *InstanceConfigureRequest, opts ...grpc.CallOption) (*InstanceConfigureResponse, error)
}

type systemServiceClient struct {
	cc *grpc.ClientConn
}

func NewSystemServiceClient(cc *grpc.ClientConn) SystemServiceClient {
	return &systemServiceClient{cc}
}

func (c *systemServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/dg.model.SystemService/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemServiceClient) SystemStatus(ctx context.Context, in *SystemStatusRequest, opts ...grpc.CallOption) (*SystemStatusResponse, error) {
	out := new(SystemStatusResponse)
	err := grpc.Invoke(ctx, "/dg.model.SystemService/SystemStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemServiceClient) GetInstances(ctx context.Context, in *GetInstancesRequest, opts ...grpc.CallOption) (*InstanceConfigureResponse, error) {
	out := new(InstanceConfigureResponse)
	err := grpc.Invoke(ctx, "/dg.model.SystemService/GetInstances", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemServiceClient) ConfigEngine(ctx context.Context, in *InstanceConfigureRequest, opts ...grpc.CallOption) (*InstanceConfigureResponse, error) {
	out := new(InstanceConfigureResponse)
	err := grpc.Invoke(ctx, "/dg.model.SystemService/ConfigEngine", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SystemService service

type SystemServiceServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	SystemStatus(context.Context, *SystemStatusRequest) (*SystemStatusResponse, error)
	GetInstances(context.Context, *GetInstancesRequest) (*InstanceConfigureResponse, error)
	ConfigEngine(context.Context, *InstanceConfigureRequest) (*InstanceConfigureResponse, error)
}

func RegisterSystemServiceServer(s *grpc.Server, srv SystemServiceServer) {
	s.RegisterService(&_SystemService_serviceDesc, srv)
}

func _SystemService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dg.model.SystemService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemService_SystemStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).SystemStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dg.model.SystemService/SystemStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).SystemStatus(ctx, req.(*SystemStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemService_GetInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).GetInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dg.model.SystemService/GetInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).GetInstances(ctx, req.(*GetInstancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemService_ConfigEngine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceConfigureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServiceServer).ConfigEngine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dg.model.SystemService/ConfigEngine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServiceServer).ConfigEngine(ctx, req.(*InstanceConfigureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SystemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dg.model.SystemService",
	HandlerType: (*SystemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _SystemService_Ping_Handler,
		},
		{
			MethodName: "SystemStatus",
			Handler:    _SystemService_SystemStatus_Handler,
		},
		{
			MethodName: "GetInstances",
			Handler:    _SystemService_GetInstances_Handler,
		},
		{
			MethodName: "ConfigEngine",
			Handler:    _SystemService_ConfigEngine_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("system.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 951 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xde, 0xfc, 0x38, 0x3f, 0x27, 0x6e, 0x1a, 0x66, 0xbb, 0x6d, 0x36, 0x2c, 0xab, 0x95, 0x91,
	0x50, 0xb5, 0x17, 0x11, 0x2a, 0x12, 0x48, 0x48, 0x5c, 0x94, 0xd4, 0x6e, 0x23, 0xe8, 0xb6, 0x72,
	0x42, 0xd0, 0x5e, 0x55, 0x5e, 0x7b, 0xe2, 0x5a, 0x9b, 0xd8, 0xc1, 0x9e, 0x54, 0x2a, 0x37, 0xbc,
	0x08, 0x17, 0xbc, 0x01, 0xef, 0x81, 0xc4, 0x03, 0xf0, 0x10, 0xbc, 0x03, 0xf3, 0xeb, 0x8c, 0xe3,
	0x14, 0x89, 0xa2, 0xbd, 0x89, 0x72, 0xbe, 0xef, 0xcc, 0xe7, 0x73, 0xe6, 0xcc, 0x39, 0x33, 0x60,
	0x66, 0xf7, 0x19, 0xc1, 0xcb, 0xe1, 0x2a, 0x4d, 0x48, 0x82, 0x5a, 0x41, 0x38, 0x5c, 0x26, 0x01,
	0x5e, 0x0c, 0x3e, 0x5a, 0x24, 0xbe, 0xb7, 0xf0, 0x93, 0xe5, 0x32, 0x89, 0x05, 0x39, 0x30, 0x75,
	0xcb, 0xda, 0x83, 0xce, 0x75, 0x14, 0x87, 0x2e, 0xfe, 0x69, 0x8d, 0x33, 0x62, 0x1d, 0x83, 0x29,
	0xcc, 0x6c, 0x95, 0xc4, 0x19, 0x46, 0x7d, 0x68, 0x5e, 0xe2, 0x2c, 0xf3, 0x42, 0xdc, 0xaf, 0xbc,
	0xaa, 0x1c, 0xb7, 0xdd, 0xe6, 0x52, 0x98, 0xd6, 0x33, 0x78, 0x3a, 0xe1, 0xdf, 0x9c, 0x10, 0x8f,
	0xac, 0x33, 0x25, 0xf0, 0x6b, 0x0d, 0x0e, 0x8a, 0xb8, 0x54, 0x1a, 0x40, 0xeb, 0x92, 0x85, 0x34,
	0xc3, 0xa9, 0x94, 0x6a, 0x2d, 0xa5, 0x8d, 0x5e, 0x40, 0xdb, 0x8e, 0xc3, 0x28, 0xc6, 0x8c, 0xac,
	0x72, 0xb2, 0x8d, 0x15, 0x80, 0x5e, 0x02, 0x4c, 0x70, 0x7a, 0x17, 0xf9, 0x9c, 0xae, 0x71, 0x1a,
	0xb2, 0x1c, 0x61, 0xca, 0xa3, 0xd5, 0xfa, 0x07, 0x1e, 0x64, 0x5d, 0x28, 0xfb, 0xd2, 0x66, 0xdc,
	0xe9, 0x9d, 0x17, 0x2d, 0x2e, 0xf1, 0xb2, 0x6f, 0x08, 0xce, 0x93, 0x36, 0xe3, 0xa6, 0x09, 0xf1,
	0x38, 0xd7, 0x10, 0x1c, 0x91, 0x36, 0x8b, 0x88, 0xaf, 0x3b, 0x8b, 0xb2, 0xf7, 0xfd, 0xa6, 0x88,
	0xc8, 0x53, 0x00, 0x63, 0xf9, 0x4a, 0xce, 0xb6, 0x04, 0x4b, 0x14, 0xc0, 0xd8, 0x37, 0x98, 0x8c,
	0xaf, 0x26, 0x38, 0x0e, 0xfa, 0x6d, 0xc1, 0xc6, 0x0a, 0xc8, 0x59, 0x17, 0xfb, 0x77, 0x7d, 0xd0,
	0x58, 0x06, 0xb0, 0x98, 0xce, 0x55, 0x2e, 0x1d, 0x11, 0x53, 0xa8, 0x72, 0x79, 0x05, 0x1d, 0xca,
	0xe5, 0xe9, 0x98, 0x9c, 0xee, 0x84, 0x1b, 0x48, 0x7a, 0xe4, 0x49, 0xed, 0xe5, 0x1e, 0x0a, 0xb2,
	0x7e, 0xab, 0x41, 0x7f, 0x1c, 0x67, 0xc4, 0x8b, 0x7d, 0x3c, 0x4a, 0xe2, 0x79, 0x14, 0xae, 0x53,
	0x2c, 0x6b, 0x87, 0x46, 0xb0, 0x4f, 0x83, 0x18, 0x2f, 0xe9, 0xc7, 0x66, 0x82, 0xe4, 0x95, 0xea,
	0x9c, 0x3c, 0x1f, 0xaa, 0x03, 0x35, 0xdc, 0x72, 0x70, 0xf7, 0xd3, 0x22, 0xa0, 0x8b, 0x38, 0x52,
	0xa4, 0xfa, 0x90, 0x88, 0xb3, 0x2d, 0xe2, 0x14, 0x44, 0x66, 0x51, 0x80, 0x13, 0x15, 0x49, 0x6d,
	0x87, 0x88, 0xee, 0xc0, 0x45, 0x74, 0x40, 0x17, 0x51, 0x91, 0xd4, 0x1f, 0x12, 0x71, 0xb6, 0x45,
	0x54, 0x24, 0x5f, 0x41, 0xc7, 0xf5, 0xe2, 0xf7, 0x2a, 0x0a, 0x83, 0x0b, 0x3c, 0xd3, 0x04, 0x36,
	0xa4, 0xdb, 0x49, 0x37, 0x86, 0x5a, 0xa8, 0xbe, 0xdc, 0xd8, 0xb5, 0xd0, 0xd1, 0x17, 0x4a, 0x83,
	0x35, 0xd6, 0x39, 0x3d, 0x0f, 0xb2, 0x48, 0x79, 0x63, 0xfd, 0x02, 0xcf, 0x77, 0x14, 0x4e, 0x36,
	0xd7, 0x21, 0x34, 0x44, 0xbb, 0xc9, 0xd6, 0x6a, 0x64, 0xdc, 0xd2, 0xdb, 0xb7, 0x5a, 0x68, 0x5f,
	0xf4, 0x39, 0x34, 0xe9, 0xea, 0xf5, 0x82, 0x64, 0x74, 0x67, 0x6b, 0x34, 0xb4, 0xc3, 0x4d, 0x68,
	0xa2, 0x17, 0x65, 0xff, 0x36, 0x53, 0xe1, 0x66, 0xfd, 0x59, 0x81, 0x6e, 0x31, 0x02, 0xf4, 0x1a,
	0xea, 0xd3, 0xfb, 0x95, 0x18, 0x0d, 0x5d, 0x5d, 0x41, 0xf9, 0x31, 0xd6, 0xad, 0x13, 0xfa, 0x8b,
	0x0e, 0xc0, 0x18, 0x25, 0xeb, 0x98, 0xf0, 0x40, 0x0c, 0xd7, 0xf0, 0x99, 0x81, 0xbe, 0x86, 0xb6,
	0xb3, 0x8e, 0x7d, 0x12, 0xd1, 0x34, 0x78, 0x20, 0xdd, 0x93, 0x17, 0x85, 0xea, 0x24, 0x61, 0x1c,
	0xfd, 0x8c, 0x73, 0x1f, 0xb7, 0x3d, 0x57, 0x7f, 0xd1, 0x37, 0xb0, 0x37, 0x21, 0x49, 0x4a, 0xb3,
	0x29, 0x54, 0xf7, 0x68, 0xb3, 0xbe, 0x40, 0xbb, 0x7b, 0x99, 0x6e, 0x5a, 0xe3, 0xd2, 0x69, 0x47,
	0x5f, 0x42, 0x3b, 0xdf, 0x77, 0x79, 0xf4, 0xfb, 0xe5, 0xa4, 0xa4, 0x5c, 0x3b, 0x52, 0xae, 0xba,
	0x94, 0xf3, 0x3f, 0xa5, 0xfe, 0xae, 0x94, 0x8e, 0xfe, 0x63, 0xb5, 0xd8, 0xe0, 0xfc, 0x76, 0x3d,
	0x9f, 0xe3, 0x74, 0x42, 0xb7, 0x50, 0xee, 0x3b, 0xbc, 0xcb, 0x11, 0xf4, 0x19, 0x74, 0xcf, 0x30,
	0xc1, 0x3e, 0x3d, 0x6c, 0x84, 0x8e, 0x53, 0x6f, 0xc1, 0x9b, 0xcc, 0x70, 0xbb, 0x41, 0x01, 0xa5,
	0x65, 0xee, 0x8d, 0x16, 0x5e, 0x96, 0x45, 0xf3, 0xfb, 0xdc, 0xb3, 0xce, 0x3d, 0x7b, 0xfe, 0x16,
	0x8e, 0x86, 0x80, 0x94, 0xaf, 0xf6, 0x6d, 0x83, 0x7b, 0x23, 0xbf, 0xc4, 0x58, 0x7f, 0x55, 0x4a,
	0x5d, 0xfa, 0xc1, 0xf2, 0x3d, 0x86, 0x7d, 0x91, 0xef, 0xf4, 0x96, 0x1e, 0xea, 0xdb, 0x64, 0x11,
	0xf0, 0x84, 0xab, 0xee, 0x7e, 0x50, 0x84, 0xd9, 0x20, 0x15, 0x9e, 0x3f, 0x46, 0x01, 0xb9, 0x95,
	0xc9, 0x76, 0x82, 0x0d, 0x84, 0x2c, 0x30, 0x85, 0xc7, 0x05, 0x8e, 0xc2, 0x5b, 0x22, 0x33, 0x34,
	0x03, 0x0d, 0xb3, 0xec, 0xc2, 0xec, 0x78, 0xf4, 0x91, 0xb0, 0x0b, 0x93, 0xe4, 0xd1, 0x32, 0x17,
	0x60, 0xea, 0x8d, 0xcd, 0x2e, 0xa2, 0xa2, 0x8e, 0xa1, 0xef, 0x25, 0xbd, 0x88, 0xdc, 0x95, 0x7f,
	0x9d, 0xa4, 0x74, 0x40, 0x54, 0x69, 0x5f, 0x1a, 0x6e, 0x2b, 0x95, 0xf6, 0xeb, 0xdf, 0x2b, 0x60,
	0xea, 0x1d, 0x4e, 0x9d, 0x0f, 0x47, 0xce, 0xf9, 0xcd, 0xf4, 0xed, 0xb5, 0x7d, 0x33, 0xb3, 0x2f,
	0xc6, 0xa3, 0xef, 0xed, 0x9b, 0xf1, 0xe5, 0xe9, 0xb9, 0xdd, 0x7b, 0xb2, 0x93, 0x9b, 0x8d, 0xcf,
	0xec, 0xab, 0x5e, 0x05, 0x7d, 0x0c, 0x47, 0x25, 0xce, 0x3d, 0x7d, 0xf3, 0x9d, 0xed, 0xf6, 0xaa,
	0xe8, 0x08, 0x9e, 0xe6, 0xa4, 0x73, 0x3a, 0x52, 0x8a, 0xb5, 0x32, 0x21, 0xe4, 0xea, 0x74, 0xda,
	0x1d, 0x14, 0x09, 0xa9, 0x65, 0x9c, 0xfc, 0x51, 0xa5, 0xb3, 0x42, 0xbc, 0x4a, 0xc4, 0xbb, 0x81,
	0x8e, 0xe7, 0x3a, 0x7b, 0xe8, 0x20, 0x6d, 0x22, 0x6b, 0xef, 0xa0, 0xc1, 0xe1, 0x36, 0x2c, 0x06,
	0xad, 0xf5, 0x04, 0x5d, 0x81, 0xa9, 0xbf, 0x6f, 0xd0, 0x27, 0xda, 0xb8, 0x29, 0xbf, 0x87, 0x06,
	0x2f, 0x1f, 0xa2, 0x73, 0xc1, 0x29, 0x98, 0xfa, 0xbc, 0xd7, 0x05, 0x77, 0xdc, 0x03, 0x83, 0x4f,
	0x1f, 0xaa, 0xb5, 0x76, 0x1f, 0x50, 0xd5, 0xb7, 0x60, 0x0a, 0x58, 0xd4, 0x1c, 0x59, 0xff, 0xba,
	0xec, 0xbf, 0x48, 0xbf, 0x6b, 0xf0, 0x97, 0xe3, 0x17, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x89,
	0x87, 0x30, 0x7d, 0x74, 0x0a, 0x00, 0x00,
}
