cmake_minimum_required(VERSION 2.8)
PROJECT(matrix_apps)

IF(CMAKE_BUILD_TYPE)
ELSE()
    SET(CMAKE_BUILD_TYPE "Debug")
ENDIF()

SET(CMAKE_CXX_FLAGS_DEBUG " $ENV{CXXFLAGS} -std=c++11 -DDEBUG -DUSE_CUDA -DDLIB_NO_GUI_SUPPORT -g -O3 -w")
SET(CMAKE_CXX_FLAGS_RELEASE " $ENV{CXXFLAGS} -std=c++11 -DNDEBUG -DUSE_CUDA -DDLIB_NO_GUI_SUPPORT -O3 -w")

SET(PLATFORM ${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR})

INCLUDE_DIRECTORIES(include src include/matrix_engine ../utils/dist/${PLATFORM}/include)

SET(CUDA_LIB_PATH /usr/local/cuda/lib64)
IF(${PLATFORM} STREQUAL "Linux-armv7l")
    INCLUDE_DIRECTORIES(include/caffe-6.5)
    SET(CUDA_LIB_PATH "/usr/local/cuda/lib")
    FIND_LIBRARY(LIB_TBB NAMES tbb PATHS lib/tbb/${PLATFORM} NO_CMAKE_SYSTEM_PATH NO_DEFAULT_PATH NO_CMAKE_ENVIRONMENT_PATH NO_CMAKE_PATH NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_BUILDS_PATH NO_CMAKE_SYSTEM_PATH)
ELSE(${PLATFORM} STREQUAL "Linux-armv7l")
    INCLUDE_DIRECTORIES(include/caffe-7.0)
    SET(LIB_TBB tbb)
ENDIF(${PLATFORM} STREQUAL "Linux-armv7l")

OPTION(ENABLE_CUDA "" ON)
FIND_PACKAGE(CUDA REQUIRED)

FIND_PACKAGE(Boost COMPONENTS regex system filesystem coroutine context REQUIRED)

FIND_LIBRARY(LIB_CAFFE NAMES caffe PATHS lib/dgcaffe/${PLATFORM})
FIND_LIBRARY(LIB_CUDART NAMES cudart PATHS ${CUDA_LIB_PATH})
FIND_LIBRARY(LIB_PBJSON NAMES pbjson PATHS lib/pbjson/${PLATFORM})
FIND_LIBRARY(LIB_MATRIX_UTILS NAMES matrix_util PATHS ../utils/dist/${PLATFORM}/lib)
find_library(LIB_MATRIX matrix PATHS lib/matrix_engine/${PLATFORM})
find_library(LIB_MATRIX_CUDA matrix_cuda PATHS lib/matrix_engine/${PLATFORM})
FIND_LIBRARY(LIB_MXNET mxnet PATHS lib/mxnet/${PLATFORM})
FIND_LIBRARY(LIB_THPLATEID NAMES thplateid PATHS lib/thplateid/${PLATFORM})
FIND_LIBRARY(LIB_DLIB dlib PATHS lib/dlib/${PLATFORM})
FIND_LIBRARY(LIB_HASP hasp PATHS lib/watchdog/${PLATFORM})
FIND_LIBRARY(LIB_WATCHDOG watchdog PATHS lib/watchdog/${PLATFORM} )
FIND_LIBRARY(LIB_PROTOBUF protobuf HINTS lib/protobuf/${PLATFORM})
FIND_LIBRARY(LIB_GRPC grpc HINTS lib/grpc/${PLATFORM})
FIND_LIBRARY(LIB_GRPC++ grpc++ HINTS lib/grpc/${PLATFORM})

LIST(APPEND LIBS ${LIB_MATRIX} ${LIB_WATCHDOG} ${LIB_HASP} ${LIB_MATRIX_CUDA} ${LIB_MATRIX_UTILS} ${LIB_THPLATEID} ${LIB_DLIB})
LIST(APPEND LIBS ${LIB_TBB} ${LIB_GRPC++} ${LIB_GRPC} ${LIB_PROTOBUF} ${LIB_CUDART} ${LIB_CUDNN} ${LIB_MXNET} ${LIB_CAFFE} ${LIB_PBJSON} ${Boost_LIBRARIES})
LIST(APPEND LIBS glog gflags leveldb jsoncpp b64 snappy lmdb jpeg png GL glut curl uuid
freetype hdf5_hl hdf5 m crypto opencv_core opencv_highgui opencv_imgproc opencv_calib3d opencv_features2d gstreamer-0.10
gobject-2.0 gmodule-2.0 gthread-2.0 xml2 glib-2.0 gstapp-0.10 z dl pthread)


ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(tools)

