syntax = "proto3";

package dg;

import "common.proto";
import "system.proto";

service WitnessService {

	rpc Recognize(WitnessRequest) returns (WitnessResponse) {}
	
	rpc BatchRecognize(WitnessBatchRequest) returns (WitnessBatchResponse) {}

}


message WitnessRequest {
	WitnessRequestContext Context = 1;
	WitnessImage Image = 2;
}

message WitnessBatchRequest {
	WitnessRequestContext Context = 1;
	repeated WitnessImage Images = 2;
}

message WitnessResponse {
	WitnessResponseContext Context = 1;
	WitnessResult Result = 2;
}

message WitnessBatchResponse {
	WitnessResponseContext Context = 1;
	repeated WitnessResult Results = 2;
}

message WitnessRequestContext {
	string SessionId = 1;
	//string UserName = 2;
	//string Token = 3;
	repeated WitnessFunction Functions = 4;
	RecognizeType Type = 5;
	StorageConfig Storage = 6;
	map<string, string> Params = 7;
}

enum WitnessFunction {
	RECFUNC_NONE = 0;
	RECFUNC_VEHICLE = 1;
	RECFUNC_VEHICLE_DETECT = 2;
    RECFUNC_VEHICLE_TRACK = 3;
    RECFUNC_VEHICLE_STYLE = 4;
    RECFUNC_VEHICLE_COLOR = 5;
    RECFUNC_VEHICLE_MARKER = 6;
    RECFUNC_VEHICLE_PLATE = 7;
    RECFUNC_VEHICLE_FEATURE_VECTOR = 8;
    RECFUNC_FACE = 9;
    RECFUNC_FACE_DETECTOR = 10;
    RECFUNC_FACE_FEATURE_VECTOR = 11;
}

message WitnessImage {
	Image Data = 1;
	int32 SensorId = 2;
	string SensorName = 3;
}

message WitnessResponseContext {
	string SessionId = 1;
	string Status = 2;
	string Message = 3;
	Time RequestTs = 4;
	Time ResponseTs = 5;
	map<string, Time> DebugTs = 6; //used for profile debug mode only
}

message WitnessResult {
	string InnerStatus = 1;
	string InnerMessage = 2;
	WitnessImage Image = 3;
	repeated RecognizedVehicle Vehicles = 4;
	repeated RecognizedFace Faces = 5;
}

message RecognizedVehicle {
	VehicleModel Model = 1;
	Cutboard Cutboard = 2;
	Color Color = 3;
	LicensePlate LicensePlate = 4;
	repeated SymbolItem SymbolItems = 5;
	repeated VehicleModel Candidates = 6; //DEPRECATED !!!
	string Features = 7;
	Scene Scene = 8; //DEPRECATED !!!
}

message RecognizedFace {
	Cutboard Cutboard = 1;
	float Confidence = 2;
	string Features = 3;
}

message VehicleModel {
    int32 TypeId = 1;
    int32 BrandId = 2;
    int32 SubBrandId = 3;
    int32 ModelYearId = 4;
    string Type = 5;
    string Brand = 6;
    string SubBrand = 7;
    string ModelYear = 8;
    int32 IsHead = 9;
    float Confidence = 10;
}

message LicensePlate {
    string PlateNum = 1;
    Cutboard Cutboard = 2;
    int32 ColorId = 3;
    string Color = 4;
    int32 TypeId = 5;
    string Type = 6;
    float Confidence = 7;
}

message SymbolItem {
    int32 SymbolId = 1;
    string SymbolName = 2;
    repeated Symbol Symbols = 3;
}

//DEPRECATED !!!
message Scene {
    int32 IsHead = 1;
    int32 IsDay = 2;
    string Border = 3; 
}

message Symbol {
    Cutboard Cutboard = 3;
    float Confidence = 4;
}
