file(GLOB_RECURSE SRC_FILES *.cpp *.c *.cc)
AUX_SOURCE_DIRECTORY(../include/dlib-18.18.0/dlib/all/ DLIB_CPP)
AUX_SOURCE_DIRECTORY(../../utils/src/ UTILS)

LIST(APPEND SRC_FILES ${UTILS} ${DLIB_CPP})
ADD_EXECUTABLE(${PROJECT_NAME} ${SRC_FILES})
#add_library(${PROJECT_NAME} ${SRC_FILES})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${LIBS})

#target_link_libraries(${PROJECT_ENGINE_LIB} ${CMAKE_THREAD_LIBS_INIT})
#target_link_libraries(${PROJECT_ENGINE_LIB} ${FREETYPE_LIBRARIES})
#target_link_libraries(${PROJECT_ENGINE_LIB} ${JSONCPP_LIBRARIES})
#target_link_libraries(${PROJECT_ENGINE_LIB} ${GLOG_LIBRARIES})
#target_link_libraries(${PROJECT_ENGINE_LIB} ${OpenCV_LIBS})
#target_link_libraries(${PROJECT_ENGINE_LIB} ${PROTOBUF_LIBRARY})
#target_link_libraries(${PROJECT_ENGINE_LIB} ${DLIB_LIBRARY})
#target_link_libraries(${PROJECT_ENGINE_LIB} ${Caffe_DEP_LIBRARIES})
#target_link_libraries(${PROJECT_ENGINE_LIB} ${PROJECT_NAME_STR}_utils)


IF(ENABLE_CUDA)
    set(CUDA_NVCC_FLAGS ${CMAKE_CXX_FLAGS_DEBUG};${CUDA_NVCC_FLAGS}; -DUSE_CUDA)

    file(GLOB_RECURSE CUDA_FILES *.cu)
    set(PROJECT_ENGINE_CUDA_LIB ${PROJECT_NAME_STR}_cuda)
    cuda_add_library(${PROJECT_ENGINE_CUDA_LIB} ${CUDA_FILES})

    message(STATUS "cuda files: ${CUDA_FILES}")
    target_link_libraries(${PROJECT_NAME} ${PROJECT_ENGINE_CUDA_LIB})
ENDIF()

INSTALL(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION ${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE})
